<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace=绑定一个对应的Dao/Mapper接口-->
<mapper namespace="com.tjh.mapper.TypeMapper">

	<!--新增分类-->
	<insert id="saveType" parameterType="com.tjh.entity.Type">
		insert into blogmybatis.t_type values (#{id},#{name});
	</insert>

	<!--根据id查询分类-->
	<select id="getType" resultType="Type" parameterType="Long">
		select id,name from blogmybatis.t_type where id = #{id};
	</select>

	<!--查询所有分类-->
	<select id="getAllType" resultType="Type">
		select * from t_type;
	</select>

	<!--结果集映射-->
	<resultMap id="type" type="Type">
		<!-- id为主键 -->
		<id property="id" column="tid"/>
		<result property="name" column="name"/>
		<!--复杂的属性，我们需要单独处理
		对象： association
		集合： collection
        javaType="" 指定属性的类型！
        集合中的泛型信息，我们使用ofType获取
        -->
		<collection property="blogs" ofType="Blog">
			<id property="id" column="bid"/>
			<!--column数据库中的字段，property实体类中的属性-->
			<result property="title" column="title"/>
			<result property="typeId" column="type_id"/>
		</collection>
	</resultMap>

	<!--分类页面查询-->
	<select id="getAllTypeAndBlog" resultType="Type">
		select t.id tid, t.name, b.id bid, b.title, b.type_id
		from t_type t,t_blog b
		where t.id = b.type_id;
	</select>

	<!--根据分类名称来查询-->
	<select id="getTypeByName" resultType="Type" parameterType="String">
        select * from t_type where name = #{name}
    </select>

	<!--编辑修改分类-->
	<update id="updateType" parameterType="Type" >
        update t_type set name = #{name} where id = #{id};
    </update>

	<!--删除分类-->
	<delete id="deleteType" parameterType="Long">
        delete from t_type where id = #{id}
    </delete>

	<select id="getBlogType" resultMap="type">
		<!--两个id可能会相冲，取别名即可-->
		select t.id tid, t.name, b.id bid, b.title
		from t_type t, t_blog b
		where t.id = b.type_id
	</select>


</mapper>